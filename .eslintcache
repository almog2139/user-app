[{"D:\\Users\\Almog\\Desktop\\Appsforce\\src\\index.js":"1","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\store\\store.js":"2","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\serviceWorker.js":"3","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\App.jsx":"4","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\routes.js":"5","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\pages\\UserApp.jsx":"6","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\services\\userService..js":"7","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\cmps\\UserList.jsx":"8","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\services\\utils.js":"9","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\cmps\\UserPreview.jsx":"10","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\store\\reducers\\userReducer.js":"11","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\store\\actions\\userActions.js":"12","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\services\\storageService.js":"13","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\pages\\UserEdit.jsx":"14","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\pages\\UserDetails.jsx":"15","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\cmps\\UserFilter.jsx":"16"},{"size":631,"mtime":1612104002639,"results":"17","hashOfConfig":"18"},{"size":420,"mtime":1643799673248,"results":"19","hashOfConfig":"18"},{"size":5003,"mtime":1612104054305,"results":"20","hashOfConfig":"18"},{"size":563,"mtime":1643836931008,"results":"21","hashOfConfig":"18"},{"size":139,"mtime":1612104973328,"results":"22","hashOfConfig":"18"},{"size":1161,"mtime":1643844839008,"results":"23","hashOfConfig":"18"},{"size":3146,"mtime":1643854789293,"results":"24","hashOfConfig":"18"},{"size":415,"mtime":1643801805822,"results":"25","hashOfConfig":"18"},{"size":333,"mtime":1643648254528,"results":"26","hashOfConfig":"18"},{"size":1458,"mtime":1643854656637,"results":"27","hashOfConfig":"18"},{"size":843,"mtime":1643844766265,"results":"28","hashOfConfig":"18"},{"size":1141,"mtime":1643839009193,"results":"29","hashOfConfig":"18"},{"size":362,"mtime":1643804088895,"results":"30","hashOfConfig":"18"},{"size":6208,"mtime":1643854902737,"results":"31","hashOfConfig":"18"},{"size":1501,"mtime":1643834933722,"results":"32","hashOfConfig":"18"},{"size":1216,"mtime":1643839115471,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"m2xgje",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"D:\\Users\\Almog\\Desktop\\Appsforce\\src\\index.js",[],["74","75"],"D:\\Users\\Almog\\Desktop\\Appsforce\\src\\store\\store.js",[],"D:\\Users\\Almog\\Desktop\\Appsforce\\src\\serviceWorker.js",[],"D:\\Users\\Almog\\Desktop\\Appsforce\\src\\App.jsx",["76"],"\nimport './assets/styles/styles.scss'\nimport { Switch, Route } from 'react-router-dom';\nimport {routes} from './routes.js'\nimport { UserApp } from './pages/UserApp';\n\nimport { UserDetails } from './pages/UserDetails';\nimport { UserEdit } from './pages/UserEdit';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/user/edit/:id?\" component={ UserEdit } />\n        <Route path=\"/user/:id\" component={ UserDetails } />\n        <Route path=\"/\" component={ UserApp } />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\routes.js",[],"D:\\Users\\Almog\\Desktop\\Appsforce\\src\\pages\\UserApp.jsx",["77","78","79","80"],"import { useCallback } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserFilter } from \"../cmps/UserFilter\";\r\nimport { UsersList } from \"../cmps/UserList\";\r\nimport { userService } from \"../services/userService.\";\r\nimport { loadUsers ,removeUser,setFilter} from \"../store/actions/userActions\";\r\n\r\n\r\nexport const UserApp=()=>{\r\n\r\n    const { users, filterBy } = useSelector(state => state.userReducer);\r\n    const dispatch = useDispatch()\r\n \r\nuseEffect(() => {\r\n    dispatch(loadUsers(filterBy))\r\n}, [filterBy])\r\n\r\nconst onSetFilter = filterBy => dispatch(setFilter(filterBy))\r\nconst onDeleteUser = useCallback(userId =>\r\n    dispatch(removeUser(userId)),\r\n    [removeUser, dispatch] )\r\n\r\nreturn (\r\n    <div className=\"users\">\r\n        <div className=\" filter flex cloumn align-center space-around\">\r\n        <UserFilter onSetFilter={onSetFilter} />\r\n        <button className=\"add-btn\"><Link to={ `/user/edit/` }>Add New User</Link></button>\r\n        </div>\r\n        <UsersList users={users} onDeleteUser={onDeleteUser}/>\r\n    </div>\r\n)\r\n}","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\services\\userService..js",["81","82"],"import axios from 'axios';\r\nimport { storageService } from './storageService';\r\nimport { utilService } from './utils';\r\n\r\nexport const userService = {\r\n    query,\r\n    removeUser,\r\n    _loadUsers,\r\n    getUsers,\r\n    getById,\r\n    getEmptyUser,\r\n    save\r\n}\r\nconst STORAGE_KEY = 'users'\r\nvar gUsers = _loadUsers()\r\n\r\nasync function _loadUsers() {\r\n    let users = storageService.load(STORAGE_KEY)\r\n    if (!users || !users.length) users = await getUsers();\r\n    gUsers = [...users]\r\n    console.log('g', gUsers);\r\n    storageService.store(STORAGE_KEY, gUsers)\r\n    return gUsers\r\n}\r\n\r\nfunction getEmptyUser() {\r\n    return {\r\n\r\n        \"name\": {\r\n            \"title\": \"\",\r\n            \"first\": \"\",\r\n            \"last\": \"\"\r\n        },\r\n        \"location\": {\r\n            \"street\": {\r\n                \"number\": 0,\r\n                \"name\": \"\"\r\n            },\r\n            \"city\": \"\",\r\n            \"country\": \"\",\r\n        },\r\n        \"email\": \"\"\r\n    }\r\n}\r\nasync function getUsers() {\r\n    const url = 'https://randomuser.me/api/?results=10'\r\n    const users = (await axios.get(url)).data\r\n    users.results.forEach(user => user._id = utilService.makeId());\r\n    return users.results;\r\n}\r\n\r\nasync function query(filterBy) {\r\n    const users = await gUsers;\r\n    let userToReturn = users;\r\n    userToReturn.map(user => { if (!user.id.value) user.id.value = '' })\r\n    console.log('users', users);\r\n    if (filterBy) {\r\n        console.log('here', filterBy);\r\n        userToReturn = users.filter(user => {\r\n            if (\r\n                user.id.value.toLowerCase().includes(filterBy.id) &&\r\n                user.email.toLowerCase().includes(filterBy.email) &&\r\n                (user.name.first.toLowerCase().includes(filterBy.name) || user.name.last.toLowerCase().includes(filterBy.name) || user.name.title.toLowerCase().includes(filterBy.name)) &&\r\n                ((user.location.street.number + '').includes(filterBy.location) || user.location.street.name.toLowerCase().includes(filterBy.location) || user.location.city.toLowerCase().includes(filterBy.location) || user.location.country.toLowerCase().includes(filterBy.location))\r\n            ) return user\r\n        })\r\n        console.log('after', userToReturn);\r\n\r\n\r\n        console.log('userToReturn', userToReturn);\r\n        return userToReturn\r\n\r\n    }\r\n}\r\n\r\nasync function removeUser(userId) {\r\n    const users = await gUsers\r\n    const idx = users.findIndex(user => user._id === userId)\r\n    users.splice(idx, 1)\r\n    gUsers = [...users]\r\n    storageService.store(STORAGE_KEY, gUsers)\r\n\r\n}\r\nasync function getById(id) {\r\n    const users = await gUsers\r\n    const user = users.find(user => user._id === id)\r\n    return user\r\n}\r\n\r\nasync function save(userToSave) {\r\n    const users = await gUsers\r\n    console.log('gUsers', gUsers);\r\n    if (userToSave._id) {\r\n        const idx = users.findIndex(user => user._id === userToSave._id)\r\n        users.splice(idx, 1, userToSave)\r\n\r\n\r\n    } else {\r\n        userToSave._id = utilService.makeId()\r\n        users.push(userToSave)\r\n    }\r\n    gUsers = users\r\n    storageService.store(STORAGE_KEY, gUsers)\r\n    return Promise.resolve(userToSave);\r\n}","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\cmps\\UserList.jsx",[],"D:\\Users\\Almog\\Desktop\\Appsforce\\src\\services\\utils.js",[],"D:\\Users\\Almog\\Desktop\\Appsforce\\src\\cmps\\UserPreview.jsx",["83"],"import React from 'react';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { Link } from 'react-router-dom';\r\nimport userImg from '../assets/imgs/user.png'\r\n\r\nexport default function UserPreview({ user ,onDeleteUser}) {\r\n    const img = (user.picture?.medium) ? (user.picture?.large) : userImg;\r\n    return (\r\n        <div className='card-grid'>\r\n            <Link   style={{'width':'100%'}} to={ `/user/${user._id}` }>\r\n            <div className='user-details flex space-around align-center'>\r\n                <img src={img} />\r\n                {user.id?.value && <p>Id :{user.id.value}</p>}\r\n            </div>\r\n               </Link>\r\n            <h2 className='m-t-10'>{user.name.title.toUpperCase()} {user.name.first} {user.name.last}</h2>\r\n            <p className='m-t-10'>Email :{user.email}</p>\r\n            <div className='user-location m-t-10'>\r\n                <small>Location : {user.location.country} ,{user.location.city} ,{user.location.street.name}{user.location.street.number}</small>\r\n            </div>\r\n            <div className=\"buttons flex align-items space-around\">\r\n               <DeleteOutlineIcon  onClick={ () => onDeleteUser(user._id) }/>\r\n            <Link className='btn' to={ `/user/edit/${user._id}` }><EditOutlinedIcon className='user-edit relative'/></Link>\r\n            \r\n            </div>\r\n\r\n\r\n        </div>\r\n        )\r\n}\r\n","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\store\\reducers\\userReducer.js",[],"D:\\Users\\Almog\\Desktop\\Appsforce\\src\\store\\actions\\userActions.js",[],"D:\\Users\\Almog\\Desktop\\Appsforce\\src\\services\\storageService.js",[],"D:\\Users\\Almog\\Desktop\\Appsforce\\src\\pages\\UserEdit.jsx",["84"],"import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { userService } from '../services/userService.';\r\nimport Close from '@material-ui/icons/Close';\r\nimport userImg from '../assets/imgs/user.png'\r\nimport { saveUser } from \"../store/actions/userActions\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport function UserEdit({ match, history }) {\r\n    const [user, setUser] = useState(null);\r\n    const [msg, setMsg] = useState('')\r\n    const { users} = useSelector(state => state.userReducer);\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        const { id } = match.params\r\n        console.log('id', id);\r\n        const loadUser = async () => {\r\n            const user = id ? await userService.getById(id) : userService.getEmptyUser()\r\n            setUser(user)\r\n        }\r\n        loadUser()\r\n    }, [match.params, setUser])\r\n\r\n    const onSaveUser = async (ev) => {\r\n        ev.preventDefault()\r\n        const isOkToSave = validate()\r\n        if (isOkToSave) {\r\n            dispatch(saveUser(user))\r\n            history.push('/')\r\n        }\r\n    }\r\n    const validate = () => {\r\n        if (!user.name.first || !user.name.last || !user.location.street.number || !user.location.street.name || !user.location.city || !user.location.country || !user.email) {\r\n            setMsg('all fields are require!')\r\n            setTimeout(() => {\r\n                setMsg('')\r\n            }, 5000)\r\n            return false\r\n\r\n        }\r\n        if (user.name?.first.length < 3 || user.name?.last.length < 3) {\r\n            setMsg('Name must contain at least 3 characters!')\r\n            setTimeout(() => {\r\n                setMsg('')\r\n            }, 5000)\r\n            return false\r\n        }\r\n        if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(user.email)) {\r\n            setMsg('Invalid Email!')\r\n            setTimeout(() => {\r\n                setMsg('')\r\n            }, 5000)\r\n            return false\r\n        }\r\n        let isEmailExist=users.find(currUser=>currUser.email===user.email &&currUser._id!==user._id)\r\n        if(isEmailExist){\r\n            setMsg('This email address is already in use')\r\n            setTimeout(() => {\r\n                setMsg('')\r\n            }, 5000)\r\n            return false\r\n        }\r\n        return true\r\n\r\n\r\n\r\n    }\r\n    const handelUserChange = (ev) => {\r\n        const name = ev.target.name\r\n        const value = (ev.target.type === 'number') ? +ev.target.value : ev.target.value;\r\n        setUser(prevUser => ({\r\n            ...prevUser,\r\n            [name]: value\r\n        }))\r\n\r\n    };\r\n    const changeName = (ev) => {\r\n        const name = ev.target.name;\r\n        const value = ev.target.value\r\n        let copyUser = { ...user }\r\n        copyUser.name[name] = value\r\n        setUser(copyUser)\r\n    }\r\n    const changeLocation = (ev) => {\r\n        const name = ev.target.name;\r\n        const value = ev.target.value\r\n        let copyUser = { ...user }\r\n        copyUser.location[name] = value\r\n        setUser(copyUser)\r\n\r\n    }\r\n    const changeLocationStreet = (ev) => {\r\n        const name = ev.target.name;\r\n        const value = ev.target.value\r\n        let copyUser = { ...user }\r\n        copyUser.location.street[name] = value\r\n        setUser(copyUser)\r\n\r\n    }\r\n    if (!user) return <div>loading</div>\r\n    const img = (user.picture?.large) ? (user.picture?.large) : userImg;\r\n    return (\r\n        <>\r\n            <form className=\"user-deatilss \" onSubmit={onSaveUser}>\r\n                <button className='close-btn' onClick={() => history.push('/')}><Close /></button>\r\n                <img src={img} />\r\n                <h3 className=\"msg\">{msg}</h3>\r\n                <secrion className='user-fields flex column'>\r\n                    <div className='flex m-t-7 space-between'>\r\n                        <label htmlFor=\"\">Title Name:</label>\r\n                        <input type=\"text\" name=\"title\" placeholder=\"Title Name\" value={user.name.title} onChange={changeName} />\r\n                    </div>\r\n                    <div className='flex m-t-7 space-between'>\r\n                        <label htmlFor=\"\">First Name:</label>\r\n                        <input type=\"text\" name=\"first\" placeholder=\"First Name\" value={user.name.first} onChange={changeName} />\r\n                    </div>\r\n                    <div className='flex m-t-7 space-between'>\r\n                        <label htmlFor=\"\">Last Name:</label>\r\n                        <input type=\"text\" name=\"last\" placeholder=\"Last Name\" value={user.name.last} onChange={changeName} />\r\n                    </div>\r\n                    <div className='flex m-t-7 space-between'>\r\n                        <label htmlFor=\"\">Street Name:</label>\r\n                        <input type=\"text\" name=\"name\" placeholder=\"Street Name\" value={user.location.street.name} onChange={changeLocationStreet} />\r\n                    </div>\r\n                    <div className='flex m-t-7 space-between'><label htmlFor=\"\">Street Number:</label>\r\n                        <input type=\"number\" name=\"number\" placeholder=\"Street Number\" value={user.location.street.number} onChange={changeLocationStreet} />\r\n                    </div>\r\n                    <div className='flex m-t-7 space-between'><label htmlFor=\"\">City:</label>\r\n                        <input type=\"text\" name=\"city\" placeholder=\"City\" value={user.location.city} onChange={changeLocation} />\r\n                    </div>\r\n                    <div className='flex m-t-7 space-between' >\r\n                        <label htmlFor=\"\">Country:</label>\r\n                        <input type=\"text\" name=\"country\" placeholder=\"Country\" value={user.location.country} onChange={changeLocation} />\r\n                    </div>\r\n                    <div className='flex m-t-7 space-between'>\r\n                        <label htmlFor=\"\">Email:</label>\r\n                        <input className=\"email-input\" type=\"email\" name=\"email\" placeholder=\"Email\" value={user.email} onChange={handelUserChange} />\r\n                    </div>\r\n                    <button className='btn-save'>Save</button>\r\n                </secrion>\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\n","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\pages\\UserDetails.jsx",["85"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport { userService } from '../services/userService.';\r\nimport { useEffect } from 'react';\r\nimport Close from '@material-ui/icons/Close';\r\nimport userImg from '../assets/imgs/user.png'\r\n\r\nexport function UserDetails({match, history}) {\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n\r\n        const loadUser = async () => {\r\n            const { id } = match.params\r\n            const user = await userService.getById(id)\r\n            setUser(user)\r\n        }\r\n\r\n        loadUser()\r\n    }, [match.params])\r\n\r\n\r\n    if (!user) return <div>Loading</div>\r\n    const img = (user.picture?.large) ? (user.picture?.large) : userImg;\r\n    return (\r\n        <div className='user-deatilss'>\r\n            <button className='close-btn'onClick={() => history.goBack()}><Close /></button>\r\n            <img src={img} />\r\n        <div className=' flex space-around align-center m-t-10'>\r\n            {user.id?.value && <p>Id :{user.id.value}</p>}\r\n        </div>\r\n        <h2 className='m-t-10'>{user.name.title.toUpperCase()} {user.name.first} {user.name.last}</h2>\r\n        <p className='m-t-10'>Email :{user.email}</p>\r\n        <p className='m-t-10'>Phone :{user.phone}</p>\r\n        <div className='user-location m-t-10'>\r\n            <small>Location : {user.location.country} ,{user.location.city} ,{user.location.street.name}{user.location.street.number}</small>\r\n        </div>\r\n       \r\n       \r\n\r\n\r\n    </div>\r\n    );\r\n}\r\n","D:\\Users\\Almog\\Desktop\\Appsforce\\src\\cmps\\UserFilter.jsx",["86"],"import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport function UserFilter({ onSetFilter }) {\r\n    const [filterBy, setFilterBy] = useState({\r\n        name: '',\r\n        location: '',\r\n        id: '',\r\n        email: ''\r\n    })\r\n    useEffect(() => {\r\n        onSetFilter({ ...filterBy })\r\n    }, [filterBy])\r\n\r\n    const handelChange = (ev) => {\r\n       \r\n        const value = ev.target.type === 'number' ? +ev.target.value : ev.target.value;\r\n        const field = ev.target.name;\r\n        setFilterBy(prevFilterBy => ({\r\n            ...prevFilterBy,\r\n            [field]: value\r\n        }))\r\n     \r\n\r\n    };\r\n\r\n    return <div className=\"user-filter\">\r\n        <input type=\"text\" placeholder=\"Search first/last:\" value={filterBy.name} name=\"name\" onChange={handelChange} autoFocus />\r\n        <input type=\"text\" placeholder=\"Search User By Id\" value={filterBy.id} name=\"id\" onChange={handelChange} />\r\n        <input type=\"email\" placeholder=\"Search User By Email\" value={filterBy.email} name=\"email\" onChange={handelChange} />\r\n        <input type=\"location\" placeholder=\"Search User By Location\" value={filterBy.location} name=\"location\" onChange={handelChange} />\r\n    </div>\r\n\r\n\r\n\r\n}",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":4,"column":9,"nodeType":"93","messageId":"94","endLine":4,"endColumn":15},{"ruleId":"91","severity":1,"message":"95","line":2,"column":21,"nodeType":"93","messageId":"94","endLine":2,"endColumn":29},{"ruleId":"91","severity":1,"message":"96","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":18,"column":4,"nodeType":"99","endLine":18,"endColumn":14,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":23,"column":5,"nodeType":"99","endLine":23,"endColumn":27,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":55,"column":27,"nodeType":"105","messageId":"106","endLine":55,"endColumn":29},{"ruleId":"103","severity":1,"message":"107","line":59,"column":42,"nodeType":"105","messageId":"108","endLine":59,"endColumn":44},{"ruleId":"109","severity":1,"message":"110","line":13,"column":17,"nodeType":"111","endLine":13,"endColumn":34},{"ruleId":"109","severity":1,"message":"110","line":109,"column":17,"nodeType":"111","endLine":109,"endColumn":34},{"ruleId":"109","severity":1,"message":"110","line":28,"column":13,"nodeType":"111","endLine":28,"endColumn":30},{"ruleId":"97","severity":1,"message":"112","line":13,"column":8,"nodeType":"99","endLine":13,"endColumn":18,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'routes' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'userService' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["116"],"React Hook useCallback has an unnecessary dependency: 'removeUser'. Either exclude it or remove the dependency array. Outer scope values like 'removeUser' aren't valid dependencies because mutating them doesn't re-render the component.",["117"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'onSetFilter'. Either include it or remove the dependency array. If 'onSetFilter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [dispatch, filterBy]",{"range":"125","text":"126"},"Update the dependencies array to be: [dispatch]",{"range":"127","text":"128"},"Update the dependencies array to be: [filterBy, onSetFilter]",{"range":"129","text":"130"},[621,631],"[dispatch, filterBy]",[782,804],"[dispatch]",[322,332],"[filterBy, onSetFilter]"]